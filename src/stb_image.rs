/* automatically generated by rust-bindgen 0.66.1 */

pub type __off_t = ::std::os::raw::c_long;
pub type __off64_t = ::std::os::raw::c_long;
pub type FILE = _IO_FILE;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_marker {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_codecvt {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_wide_data {
    _unused: [u8; 0],
}
pub type _IO_lock_t = ::std::os::raw::c_void;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_FILE {
    pub _flags: ::std::os::raw::c_int,
    pub _IO_read_ptr: *mut ::std::os::raw::c_char,
    pub _IO_read_end: *mut ::std::os::raw::c_char,
    pub _IO_read_base: *mut ::std::os::raw::c_char,
    pub _IO_write_base: *mut ::std::os::raw::c_char,
    pub _IO_write_ptr: *mut ::std::os::raw::c_char,
    pub _IO_write_end: *mut ::std::os::raw::c_char,
    pub _IO_buf_base: *mut ::std::os::raw::c_char,
    pub _IO_buf_end: *mut ::std::os::raw::c_char,
    pub _IO_save_base: *mut ::std::os::raw::c_char,
    pub _IO_backup_base: *mut ::std::os::raw::c_char,
    pub _IO_save_end: *mut ::std::os::raw::c_char,
    pub _markers: *mut _IO_marker,
    pub _chain: *mut _IO_FILE,
    pub _fileno: ::std::os::raw::c_int,
    pub _flags2: ::std::os::raw::c_int,
    pub _old_offset: __off_t,
    pub _cur_column: ::std::os::raw::c_ushort,
    pub _vtable_offset: ::std::os::raw::c_schar,
    pub _shortbuf: [::std::os::raw::c_char; 1usize],
    pub _lock: *mut _IO_lock_t,
    pub _offset: __off64_t,
    pub _codecvt: *mut _IO_codecvt,
    pub _wide_data: *mut _IO_wide_data,
    pub _freeres_list: *mut _IO_FILE,
    pub _freeres_buf: *mut ::std::os::raw::c_void,
    pub __pad5: usize,
    pub _mode: ::std::os::raw::c_int,
    pub _unused2: [::std::os::raw::c_char; 20usize],
}
pub type stbi_uc = ::std::os::raw::c_uchar;
pub type stbi_us = ::std::os::raw::c_ushort;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct stbi_io_callbacks {
    pub read: ::std::option::Option<
        unsafe extern "C" fn(
            user: *mut ::std::os::raw::c_void,
            data: *mut ::std::os::raw::c_char,
            size: ::std::os::raw::c_int,
        ) -> ::std::os::raw::c_int,
    >,
    pub skip: ::std::option::Option<
        unsafe extern "C" fn(user: *mut ::std::os::raw::c_void, n: ::std::os::raw::c_int),
    >,
    pub eof: ::std::option::Option<
        unsafe extern "C" fn(user: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int,
    >,
}
extern "C" {
    pub fn stbi_load_from_memory(
        buffer: *const stbi_uc,
        len: ::std::os::raw::c_int,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        channels_in_file: *mut ::std::os::raw::c_int,
        desired_channels: ::std::os::raw::c_int,
    ) -> *mut stbi_uc;
}
extern "C" {
    pub fn stbi_load_from_callbacks(
        clbk: *const stbi_io_callbacks,
        user: *mut ::std::os::raw::c_void,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        channels_in_file: *mut ::std::os::raw::c_int,
        desired_channels: ::std::os::raw::c_int,
    ) -> *mut stbi_uc;
}
extern "C" {
    pub fn stbi_load(
        filename: *const ::std::os::raw::c_char,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        channels_in_file: *mut ::std::os::raw::c_int,
        desired_channels: ::std::os::raw::c_int,
    ) -> *mut stbi_uc;
}
extern "C" {
    pub fn stbi_load_from_file(
        f: *mut FILE,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        channels_in_file: *mut ::std::os::raw::c_int,
        desired_channels: ::std::os::raw::c_int,
    ) -> *mut stbi_uc;
}
extern "C" {
    pub fn stbi_load_gif_from_memory(
        buffer: *const stbi_uc,
        len: ::std::os::raw::c_int,
        delays: *mut *mut ::std::os::raw::c_int,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        z: *mut ::std::os::raw::c_int,
        comp: *mut ::std::os::raw::c_int,
        req_comp: ::std::os::raw::c_int,
    ) -> *mut stbi_uc;
}
extern "C" {
    pub fn stbi_load_16_from_memory(
        buffer: *const stbi_uc,
        len: ::std::os::raw::c_int,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        channels_in_file: *mut ::std::os::raw::c_int,
        desired_channels: ::std::os::raw::c_int,
    ) -> *mut stbi_us;
}
extern "C" {
    pub fn stbi_load_16_from_callbacks(
        clbk: *const stbi_io_callbacks,
        user: *mut ::std::os::raw::c_void,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        channels_in_file: *mut ::std::os::raw::c_int,
        desired_channels: ::std::os::raw::c_int,
    ) -> *mut stbi_us;
}
extern "C" {
    pub fn stbi_load_16(
        filename: *const ::std::os::raw::c_char,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        channels_in_file: *mut ::std::os::raw::c_int,
        desired_channels: ::std::os::raw::c_int,
    ) -> *mut stbi_us;
}
extern "C" {
    pub fn stbi_load_from_file_16(
        f: *mut FILE,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        channels_in_file: *mut ::std::os::raw::c_int,
        desired_channels: ::std::os::raw::c_int,
    ) -> *mut stbi_us;
}
extern "C" {
    pub fn stbi_loadf_from_memory(
        buffer: *const stbi_uc,
        len: ::std::os::raw::c_int,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        channels_in_file: *mut ::std::os::raw::c_int,
        desired_channels: ::std::os::raw::c_int,
    ) -> *mut f32;
}
extern "C" {
    pub fn stbi_loadf_from_callbacks(
        clbk: *const stbi_io_callbacks,
        user: *mut ::std::os::raw::c_void,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        channels_in_file: *mut ::std::os::raw::c_int,
        desired_channels: ::std::os::raw::c_int,
    ) -> *mut f32;
}
extern "C" {
    pub fn stbi_loadf(
        filename: *const ::std::os::raw::c_char,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        channels_in_file: *mut ::std::os::raw::c_int,
        desired_channels: ::std::os::raw::c_int,
    ) -> *mut f32;
}
extern "C" {
    pub fn stbi_loadf_from_file(
        f: *mut FILE,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        channels_in_file: *mut ::std::os::raw::c_int,
        desired_channels: ::std::os::raw::c_int,
    ) -> *mut f32;
}
extern "C" {
    pub fn stbi_hdr_to_ldr_gamma(gamma: f32);
}
extern "C" {
    pub fn stbi_hdr_to_ldr_scale(scale: f32);
}
extern "C" {
    pub fn stbi_ldr_to_hdr_gamma(gamma: f32);
}
extern "C" {
    pub fn stbi_ldr_to_hdr_scale(scale: f32);
}
extern "C" {
    pub fn stbi_is_hdr_from_callbacks(
        clbk: *const stbi_io_callbacks,
        user: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn stbi_is_hdr_from_memory(
        buffer: *const stbi_uc,
        len: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn stbi_is_hdr(filename: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn stbi_is_hdr_from_file(f: *mut FILE) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn stbi_failure_reason() -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn stbi_image_free(retval_from_stbi_load: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn stbi_info_from_memory(
        buffer: *const stbi_uc,
        len: ::std::os::raw::c_int,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        comp: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn stbi_info_from_callbacks(
        clbk: *const stbi_io_callbacks,
        user: *mut ::std::os::raw::c_void,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        comp: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn stbi_is_16_bit_from_memory(
        buffer: *const stbi_uc,
        len: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn stbi_is_16_bit_from_callbacks(
        clbk: *const stbi_io_callbacks,
        user: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn stbi_info(
        filename: *const ::std::os::raw::c_char,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        comp: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn stbi_info_from_file(
        f: *mut FILE,
        x: *mut ::std::os::raw::c_int,
        y: *mut ::std::os::raw::c_int,
        comp: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn stbi_is_16_bit(filename: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn stbi_is_16_bit_from_file(f: *mut FILE) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn stbi_set_unpremultiply_on_load(flag_true_if_should_unpremultiply: ::std::os::raw::c_int);
}
extern "C" {
    pub fn stbi_convert_iphone_png_to_rgb(flag_true_if_should_convert: ::std::os::raw::c_int);
}
extern "C" {
    pub fn stbi_set_flip_vertically_on_load(flag_true_if_should_flip: ::std::os::raw::c_int);
}
extern "C" {
    pub fn stbi_set_unpremultiply_on_load_thread(
        flag_true_if_should_unpremultiply: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn stbi_convert_iphone_png_to_rgb_thread(
        flag_true_if_should_convert: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn stbi_set_flip_vertically_on_load_thread(flag_true_if_should_flip: ::std::os::raw::c_int);
}
extern "C" {
    pub fn stbi_zlib_decode_malloc_guesssize(
        buffer: *const ::std::os::raw::c_char,
        len: ::std::os::raw::c_int,
        initial_size: ::std::os::raw::c_int,
        outlen: *mut ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn stbi_zlib_decode_malloc_guesssize_headerflag(
        buffer: *const ::std::os::raw::c_char,
        len: ::std::os::raw::c_int,
        initial_size: ::std::os::raw::c_int,
        outlen: *mut ::std::os::raw::c_int,
        parse_header: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn stbi_zlib_decode_malloc(
        buffer: *const ::std::os::raw::c_char,
        len: ::std::os::raw::c_int,
        outlen: *mut ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn stbi_zlib_decode_buffer(
        obuffer: *mut ::std::os::raw::c_char,
        olen: ::std::os::raw::c_int,
        ibuffer: *const ::std::os::raw::c_char,
        ilen: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn stbi_zlib_decode_noheader_malloc(
        buffer: *const ::std::os::raw::c_char,
        len: ::std::os::raw::c_int,
        outlen: *mut ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn stbi_zlib_decode_noheader_buffer(
        obuffer: *mut ::std::os::raw::c_char,
        olen: ::std::os::raw::c_int,
        ibuffer: *const ::std::os::raw::c_char,
        ilen: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
